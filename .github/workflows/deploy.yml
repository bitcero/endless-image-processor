name: Deploy Image Processor Lambda

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod
env:
  GO_VERSION: '1.21'
  SAM_CLI_VERSION: '1.100.0'
  AWS_REGION: us-west-2
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DEV_WEBHOOK_URL: ${{ secrets.DEV_WEBHOOK_URL }}
  DEV_WEBHOOK_SECRET: ${{ secrets.DEV_WEBHOOK_SECRET }}
  STAGING_WEBHOOK_URL: ${{ secrets.STAGING_WEBHOOK_URL }}
  STAGING_WEBHOOK_SECRET: ${{ secrets.STAGING_WEBHOOK_SECRET }}
  PROD_WEBHOOK_URL: ${{ secrets.PROD_WEBHOOK_URL }}
  PROD_WEBHOOK_SECRET: ${{ secrets.PROD_WEBHOOK_SECRET }}
  DEPLOYMENT_BUCKET_NAME: ${{ secrets.DEPLOYMENT_BUCKET_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up Python for SAM CLI
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install SAM CLI
      run: |
        pip install aws-sam-cli==${{ env.SAM_CLI_VERSION }}

    - name: Set environment variables
      id: env
      run: |
        echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
        echo "FUNCTION_NAME=endless-image-processor-${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
        
        case "${{ github.event.inputs.environment }}" in
          dev)
            echo "MEMORY_SIZE=256" >> $GITHUB_OUTPUT
            echo "TIMEOUT=180" >> $GITHUB_OUTPUT
            echo "WEBHOOK_URL=${{ env.DEV_WEBHOOK_URL }}" >> $GITHUB_OUTPUT
            echo "WEBHOOK_SECRET=${{ env.DEV_WEBHOOK_SECRET }}" >> $GITHUB_OUTPUT
            ;;
          staging)
            echo "MEMORY_SIZE=512" >> $GITHUB_OUTPUT
            echo "TIMEOUT=300" >> $GITHUB_OUTPUT
            echo "WEBHOOK_URL=${{ env.STAGING_WEBHOOK_URL }}" >> $GITHUB_OUTPUT
            echo "WEBHOOK_SECRET=${{ env.STAGING_WEBHOOK_SECRET }}" >> $GITHUB_OUTPUT
            ;;
          prod)
            echo "MEMORY_SIZE=1024" >> $GITHUB_OUTPUT
            echo "TIMEOUT=300" >> $GITHUB_OUTPUT
            echo "WEBHOOK_URL=${{ env.PROD_WEBHOOK_URL }}" >> $GITHUB_OUTPUT
            echo "WEBHOOK_SECRET=${{ env.PROD_WEBHOOK_SECRET }}" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Build Go binary
      run: |
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o main .

    - name: Deploy with SAM
      run: |
        sam deploy \
          --template template-env.yaml \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset \
          --s3-bucket ${{ env.DEPLOYMENT_BUCKET_NAME }} \
          --stack-name endless-image-processor-${{ steps.env.outputs.ENVIRONMENT }} \
          --parameter-overrides \
            FunctionName=${{ steps.env.outputs.FUNCTION_NAME }} \
            MemorySize=${{ steps.env.outputs.MEMORY_SIZE }} \
            Timeout=${{ steps.env.outputs.TIMEOUT }} \
            Environment=${{ steps.env.outputs.ENVIRONMENT }} \
            WebhookUrl="${{ steps.env.outputs.WEBHOOK_URL }}" \
            WebhookSecret="${{ steps.env.outputs.WEBHOOK_SECRET }}"

    - name: Output deployment info
      run: |
        echo "üöÄ Deployed to ${{ steps.env.outputs.ENVIRONMENT }} environment"
        echo "üì¶ Function: ${{ steps.env.outputs.FUNCTION_NAME }}"
        echo "üåø Branch: ${{ github.ref_name }}"
        echo "üåç Region: ${{ env.AWS_REGION }}"
        echo "üìä Memory: ${{ steps.env.outputs.MEMORY_SIZE }}MB"