AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Endless Image Processor - Automatic image resizing Lambda'

Parameters:

  FunctionName:
    Type: String
    Description: Lambda function name
    Default: endless-image-processor-dev

  MemorySize:
    Type: Number
    Description: Lambda memory size in MB
    Default: 256
    MinValue: 128
    MaxValue: 3008

  Timeout:
    Type: Number
    Description: Lambda timeout in seconds
    Default: 180
    MinValue: 1
    MaxValue: 900

  Environment:
    Type: String
    Description: Deployment environment
    Default: dev
    AllowedValues: [dev, staging, prod]

  WebhookUrl:
    Type: String
    Description: Webhook URL for notifications (optional)
    Default: ""

  WebhookSecret:
    Type: String
    Description: Webhook secret for signature validation (optional)
    Default: ""
    NoEcho: true

Resources:
  DestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "endless-kd70aga-image-formats-${Environment}"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: endless-image-processor
        - Key: Purpose
          Value: processed-images
  ImageProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref FunctionName
      CodeUri: .
      Handler: main
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Timeout: !Ref Timeout
      MemorySize: !Ref MemorySize
      Policies:
        - S3ReadPolicy:
            BucketName: "endless-*-image-*"
        - S3WritePolicy:
            BucketName: "endless-*-image-formats-*"
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          WEBHOOK_URL: !Ref WebhookUrl
          WEBHOOK_SECRET: !Ref WebhookSecret
          DESTINATION_BUCKET: !Ref DestinationBucket
      Tags:
        Environment: !Ref Environment
        Project: endless-image-processor


Outputs:
  ImageProcessorFunction:
    Description: "Image Processor Lambda Function ARN"
    Value: !GetAtt ImageProcessorFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-FunctionArn"

  DestinationBucket:
    Description: "S3 Bucket for processed images"
    Value: !Ref DestinationBucket
    Export:
      Name: !Sub "${AWS::StackName}-DestinationBucket"

  Environment:
    Description: "Deployment Environment"
    Value: !Ref Environment
    Export:
      Name: !Sub "${AWS::StackName}-Environment"